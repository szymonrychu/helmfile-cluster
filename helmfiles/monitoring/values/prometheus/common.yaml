prometheusOperator:
  manageCrds: true
  admissionWebhooks:
    patch:
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi


grafana:
  imageRenderer:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 100Mi
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  initChownData:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  persistence:
    type: pvc
    enabled: true
    storageClassName: grafana-local-pvc
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  grafana.ini:
    # auth:
    #   disable_login_form: true
    # "auth.anonymous":
    #   enabled: true
    #   org_name: Main Org.
    #   org_role: Admin
    server:
      root_url: https://grafana.szymonrichert.pl/
    smtp:
      enabled: true
      host: "smtp.gmail.com:465"
      from_address: "monitoring.szymonrichert.pl@gmail.com"
  
  additionalDataSources:
    - name: Loki
      editable: false
      orgId: 1
      access: proxy
      type: loki
      url: http://loki:3100
      version: 1

alertmanager:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  config:
    global:
      smtp_smarthost: "smtp.gmail.com:465"
      smtp_from: "monitoring.szymonrichert.pl@gmail.com"

prometheus:
  prometheusSpec:
    ruleSelector: {}
    # ruleNamespaceSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    retentionSize: 100GB
    resources:
      limits:
        cpu: 1
        memory: 1500Mi
      requests:
        cpu: 100m
        memory: 500Mi
    storageSpec:
      volumeClaimTemplate:    
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: prometheus-local-pvc
          resources:
            requests:
              storage: 100Gi
